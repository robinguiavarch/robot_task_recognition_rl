import os
import pandas as pd
import matplotlib.pyplot as plt


def moving_average(values, window):
    """
    Smooths the curve using a moving average.

    Args:
        values (list or np.array): Raw values.
        window (int): Size of the moving window.

    Returns:
        np.array: Smoothed values.
    """
    return pd.Series(values).rolling(window, min_periods=1).mean().values


def load_monitor_csv(log_dir):
    """
    Loads the monitor.csv file generated by SB3 in a given log directory.

    Args:
        log_dir (str): Path to the folder containing the monitor.csv file.

    Returns:
        pd.DataFrame: Loaded monitor data.
    """
    monitor_path = os.path.join(log_dir, "monitor.csv")
    if not os.path.exists(monitor_path):
        raise FileNotFoundError(f"monitor.csv not found in {log_dir}")
    
    return pd.read_csv(monitor_path, skiprows=1)


def plot_learning_curve(log_dir, title="Learning Curve", ma_window=10, save_path=None):
    """
    Plots the reward curve over time from monitor.csv.

    Args:
        log_dir (str): Path to the logs directory containing monitor.csv.
        title (str): Title of the plot.
        ma_window (int): Moving average window.
        save_path (str): Optional. Path to save the figure (PNG).
    """
    df = load_monitor_csv(log_dir)
    
    episodes = range(1, len(df) + 1)
    rewards = df["r"].values
    smoothed_rewards = moving_average(rewards, ma_window)

    plt.figure(figsize=(10, 5))
    plt.plot(episodes, rewards, alpha=0.3, label="Raw rewards")
    plt.plot(episodes, smoothed_rewards, color="blue", linewidth=2, label=f"Smoothed (MA={ma_window})")
    plt.xlabel("Episode")
    plt.ylabel("Reward")
    plt.title(title)
    plt.legend()
    plt.grid(True)

    if save_path:
        plt.savefig(save_path)
        print(f" Saved plot to: {save_path}")
    else:
        plt.show()
